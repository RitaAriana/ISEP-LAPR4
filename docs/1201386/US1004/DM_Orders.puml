@startuml
'https://plantuml.com/class-diagram

skinparam classAttributeIconSize 0
hide empty attributes
skinparam classBackgroundColor beige
skinparam ArrowColor #222222

package "<<aggregate>> ProductOrder"{
    entity ProductOrder
    entity OrderItem
    class TotalPriceWithoutVAT
    class TotalPriceWithVAT
    class Status
    class TotalVolume
    class TotalWeight
    class DeliveryAddress
    class BillingAddress
    class SourceChannel
    class InteractionDate
    class AdditionalComment
}

entity ProductOrder <<entity>> <<root>> {
- numericIdentifier
- dateOfOrder
- shipmentMethod
- paymentMethod

}

entity OrderItem <<entity>> {
    -itemQuantity
}

class TotalPriceWithoutVAT <<(V,#FF8B40) value object>> {}
class TotalPriceWithVAT <<(V,#FF8B40) value object>> {}
class DeliveryAddress <<(V,#FF8B40) value object>> {}
class BillingAddress <<(V,#FF8B40) value object>> {}
class Status <<(V,#FF8B40) value object>> {}
class TotalVolume <<(V,#FF8B40) value object>> {}
class TotalWeight <<(V,#FF8B40) value object>> {}

class SourceChannel <<(V,#FF8B40) value object>>
class InteractionDate <<(V,#FF8B40) value object>>
class AdditionalComment <<(V,#FF8B40) value object>>

package "<<aggregate>> Client" {
    entity Client
    class PostalAddresses
}

entity Client <<entity>> <<root>> {

}
class PostalAddresses <<(V,#FF8B40) value object>> {}

entity Client <<entity>> <<root>> {

}


package "<<aggregate>> Product"{
     entity Product
     class PriceWithoutVAT
     class PriceWithVAT

}

entity Product <<entity>> <<root>> {

}

class PriceWithoutVAT <<(V,#FF8B40) value object>> {}
class PriceWithVAT <<(V,#FF8B40) value object>> {}

package "<<aggregate>> Employee" {
    entity Employee
}

entity Employee <<entity>> <<root>> {
    -identifier
}


ProductOrder -----> "1" Client : associated
Client -> "0..*" PostalAddresses: associated with an

Product --> "1" PriceWithoutVAT: associated
Product --> "1" PriceWithVAT: associated

ProductOrder -> "1" TotalPriceWithoutVAT : is marked
ProductOrder -> "1" TotalPriceWithVAT : is marked

ProductOrder ----> "0..1" Employee : associated with
ProductOrder --> "1" Status : is in
ProductOrder ---> "1" TotalVolume : associated with
ProductOrder ---> "1" TotalWeight : associated with
ProductOrder ---> "1" DeliveryAddress : associated with
ProductOrder ---> "1" BillingAddress : associated with
ProductOrder -> "1..*" OrderItem : composed by
OrderItem ---> "1" Product : composed by

ProductOrder ---> "0..1" SourceChannel
ProductOrder ---> "0..1" InteractionDate
ProductOrder ---> "0..1" AdditionalComment

@enduml
